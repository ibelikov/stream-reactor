project(":kafka-connect-query-language") {
    apply plugin: 'antlr'

    test {
        maxParallelForks = 1
    }

    ext {
        antlrVersion = "4.7.1"
    }

    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        antlr group: 'org.antlr', name: 'antlr4', version: antlrVersion
        implementation group: 'org.antlr', name: 'antlr4-runtime', version: antlrVersion

        implementation group: 'com.oath.cyclops', name: 'cyclops', version: cyclopsVersion

        testImplementation(project(path: ':test-utils', configuration: 'testArtifacts'))
    }

    generateGrammarSource {
        arguments += [
            "-package",
            "io.lenses.kcql.antlr4"
        ]
        outputDirectory = new File("${project.projectDir}/build/generated/antlr/main/java/io/lenses/kcql/antlr4")
    }

    sourceSets {
        main.java.srcDirs += 'build/generated/antlr/main/java'
        main.antlr.srcDirs = ['src/main/antlr4']
    }

    task sourcesJar(type: Jar) {
        archiveClassifier = 'sources'
        from sourceSets.main.allSource

        inputs.files(sourceSets.main.allSource)

        dependsOn generateGrammarSource

        mustRunAfter generateGrammarSource
    }

    task javadocJar(type: Jar) {
        archiveClassifier = 'javadoc'
        from javadoc
    }

    tasks.withType(Tar) {
        compression Compression.GZIP
        extension = 'tgz'
    }


    artifacts {
        archives javadocJar, sourcesJar
    }

    //order should be: generateGrammarSource -> updateLicenseMain -> compileJava
    //spotlessApply.dependsOn("generateGrammarSource")

    task compile(dependsOn: 'compileJava')
    task fatJarNoTest(dependsOn: 'shadowJar')
}
